Q：把苹果们分成两堆，使其各重量之差最小
A：字面理解就是凑重量，离总重量的二分之一最近越好。
有一种异常朴素的方法便是二进制枚举，这里n <= 20，暗示了算法可能是个O(2^n)的复杂度
，二进制枚举便是用一个长度为n的数组，每次都按照二进制的0和1选择数组中 选或者不选，
但是依我看，这种方法是时间复杂度是O(n * 2^n)（因为你每次枚举了之后，还要去取n位数加和），
另一种方法是，直接进行二元递推，对于第一个数，选  or  不选，
然后从这两种结果中分化到第二个数，选 or 不选，一直到数组中最后一个元素做选择，
最后一定有2^n种情况，只要找遍历一次找离sum / 2 绝对值之差最小的数就可以了。

ps：按道理来说，第一次需要1次加法，第二次需要2次加法，第三次需要4次加法....
第n次需要pow(2,n-1)次，总共需要（2^n - 1次)，
而二进制枚举需要进行（n * 2^n)次取数、若干次加和，
大概就是因为这里所以递推更快一些吧。
